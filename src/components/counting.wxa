<script>
import {wxa, Eventbus} from '@wxa/core';

@Eventbus
class Counting {
    constructor() {}

    properties = {
        start: {
            type: String,
            default: '0',
            observer: 'update',
        },
        category: {
            type: String,
            default: 'hms',
        },
    }

    data = {
        date: '00:00:00',
    }

    attached() {
        // console.log('attached');
        // console.log(this);
        // this.linkstart(+this.data.start);
        this.eventbus.on('app-on-hide', this.hideApp);
        this.eventbus.on('app-on-show', this.showApp);
    }
    detached() {
        clearTimeout(this.timer);
        this.eventbus.off('app-on-hide', this.hideApp);
        this.eventbus.off('app-on-show', this.showApp);
    }
    methods = {
        linkstart(start) {
            if (!this.hiding) {
                this.setData({
                    'date': this.getDateFromStamp(start),
                });
            }

            clearTimeout(this.timer);
            this.timer = setTimeout(()=>{
                start -= 1;
                if (start <= 0) {
                    clearTimeout(this.timer);
                    this.triggerEvent('finish');
                } else {
                    this.linkstart(start);
                }
            }, 1000);
        },
        
        update(newVal, oldVal) {
            if (newVal === oldVal) return;
            this.linkstart(+newVal);
        },

        hideApp() {
            this.hiding = true;
        },

        showApp() {
            this.hiding = false;
        },

        getDateFromStamp(stamp = 0) {
            const hours = 60*60;
            const minutes = 60;
            let ret = [];

            switch (this.data.category) {
                case 'hms': {
                    let h = ~~(stamp/hours);
                    let m = ~~((stamp-h*hours)/minutes);
                    let s = stamp - h*hours - m*minutes;
        
                    ret.push(h, m, s);
                    break;
                }
                case 'ms': {
                    let m = ~~(stamp/minutes);
                    let s = stamp - m*minutes;
        
                    ret.push(m, s);
                    break;
                }
                default: {
                    ret.push(stamp);
                }
            }

            ret = ret.map((i)=>this.padZero(i));
            return ret.join(':');
        },

        padZero(x) {
            x = x.toString();
            if (x.length === 1) {
                return '0'+x;
            }
            return x;
        },
    }
}

wxa.launchComponent(Counting);

</script>
<config>
{
    "component": true
}
</config>
<template>
    <text class="counting">
        <slot></slot>{{date}}
    </text>
</template>
